syntax = "proto3";
package data_plane;

option go_package = "github.com/eth-easl/cluster_manager/data_plane/api/proto";
import "common.proto";
import "google/protobuf/empty.proto";

message NodeInfo {
  string NodeID = 1;
  string IP = 2;
  int32 Port = 3;
}

message AutoscalingMetric {
  string ServiceName = 1;
  float Metric = 2;
}

message DataplaneInfo {
  int32 Port = 1;
}

service CpiInterface {
  rpc OnMetricsReceive(AutoscalingMetric) returns (ActionStatus);
  rpc ListServices(google.protobuf.Empty) returns (ServiceList);

  rpc RegisterDataplane(DataplaneInfo) returns (ActionStatus);
  rpc RegisterService(ServiceInfo) returns (ActionStatus);
  rpc RegisterNode(NodeInfo) returns (ActionStatus);
  rpc NodeHeartbeat(NodeInfo) returns (ActionStatus);
}

message SandboxID {
  string ID = 1;
  int32 HostPort = 2;
}

message SandboxCreationStatus {
  bool Success = 1;
  string ID = 2;
  PortMapping PortMappings = 3;
  int64 TimeTookMs = 4;
}

service WorkerNodeInterface {
  rpc CreateSandbox(ServiceInfo) returns (SandboxCreationStatus);
  rpc DeleteSandbox(SandboxID) returns (ActionStatus);
}