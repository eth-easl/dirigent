// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.17.3
// source: common.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type L4Protocol int32

const (
	L4Protocol_TCP L4Protocol = 0
	L4Protocol_UDP L4Protocol = 1
)

// Enum value maps for L4Protocol.
var (
	L4Protocol_name = map[int32]string{
		0: "TCP",
		1: "UDP",
	}
	L4Protocol_value = map[string]int32{
		"TCP": 0,
		"UDP": 1,
	}
)

func (x L4Protocol) Enum() *L4Protocol {
	p := new(L4Protocol)
	*p = x
	return p
}

func (x L4Protocol) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (L4Protocol) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[0].Descriptor()
}

func (L4Protocol) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[0]
}

func (x L4Protocol) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use L4Protocol.Descriptor instead.
func (L4Protocol) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

type PrepullMode int32

const (
	PrepullMode_NONE      PrepullMode = 0
	PrepullMode_ONE_SYNC  PrepullMode = 1
	PrepullMode_ONE_ASYNC PrepullMode = 2
	PrepullMode_ALL_SYNC  PrepullMode = 3
	PrepullMode_ALL_ASYNC PrepullMode = 4
)

// Enum value maps for PrepullMode.
var (
	PrepullMode_name = map[int32]string{
		0: "NONE",
		1: "ONE_SYNC",
		2: "ONE_ASYNC",
		3: "ALL_SYNC",
		4: "ALL_ASYNC",
	}
	PrepullMode_value = map[string]int32{
		"NONE":      0,
		"ONE_SYNC":  1,
		"ONE_ASYNC": 2,
		"ALL_SYNC":  3,
		"ALL_ASYNC": 4,
	}
)

func (x PrepullMode) Enum() *PrepullMode {
	p := new(PrepullMode)
	*p = x
	return p
}

func (x PrepullMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PrepullMode) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[1].Descriptor()
}

func (PrepullMode) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[1]
}

func (x PrepullMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PrepullMode.Descriptor instead.
func (PrepullMode) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

type RouteUpdateAction int32

const (
	RouteUpdateAction_ROUTE_INSTALL RouteUpdateAction = 0
	RouteUpdateAction_ROUTE_DELETE  RouteUpdateAction = 1
)

// Enum value maps for RouteUpdateAction.
var (
	RouteUpdateAction_name = map[int32]string{
		0: "ROUTE_INSTALL",
		1: "ROUTE_DELETE",
	}
	RouteUpdateAction_value = map[string]int32{
		"ROUTE_INSTALL": 0,
		"ROUTE_DELETE":  1,
	}
)

func (x RouteUpdateAction) Enum() *RouteUpdateAction {
	p := new(RouteUpdateAction)
	*p = x
	return p
}

func (x RouteUpdateAction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RouteUpdateAction) Descriptor() protoreflect.EnumDescriptor {
	return file_common_proto_enumTypes[2].Descriptor()
}

func (RouteUpdateAction) Type() protoreflect.EnumType {
	return &file_common_proto_enumTypes[2]
}

func (x RouteUpdateAction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RouteUpdateAction.Descriptor instead.
func (RouteUpdateAction) EnumDescriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

type PortMapping struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HostPort  int32      `protobuf:"varint,1,opt,name=HostPort,proto3" json:"HostPort,omitempty"`
	GuestPort int32      `protobuf:"varint,2,opt,name=GuestPort,proto3" json:"GuestPort,omitempty"`
	Protocol  L4Protocol `protobuf:"varint,3,opt,name=Protocol,proto3,enum=data_plane.L4Protocol" json:"Protocol,omitempty"`
}

func (x *PortMapping) Reset() {
	*x = PortMapping{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PortMapping) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PortMapping) ProtoMessage() {}

func (x *PortMapping) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PortMapping.ProtoReflect.Descriptor instead.
func (*PortMapping) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{0}
}

func (x *PortMapping) GetHostPort() int32 {
	if x != nil {
		return x.HostPort
	}
	return 0
}

func (x *PortMapping) GetGuestPort() int32 {
	if x != nil {
		return x.GuestPort
	}
	return 0
}

func (x *PortMapping) GetProtocol() L4Protocol {
	if x != nil {
		return x.Protocol
	}
	return L4Protocol_TCP
}

type AutoscalingConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ScalingUpperBound                    int32   `protobuf:"varint,1,opt,name=ScalingUpperBound,proto3" json:"ScalingUpperBound,omitempty"`
	ScalingLowerBound                    int32   `protobuf:"varint,2,opt,name=ScalingLowerBound,proto3" json:"ScalingLowerBound,omitempty"`
	PanicThresholdPercentage             float32 `protobuf:"fixed32,3,opt,name=PanicThresholdPercentage,proto3" json:"PanicThresholdPercentage,omitempty"`
	MaxScaleUpRate                       float32 `protobuf:"fixed32,4,opt,name=MaxScaleUpRate,proto3" json:"MaxScaleUpRate,omitempty"`
	MaxScaleDownRate                     float32 `protobuf:"fixed32,5,opt,name=MaxScaleDownRate,proto3" json:"MaxScaleDownRate,omitempty"`
	ContainerConcurrency                 int32   `protobuf:"varint,6,opt,name=ContainerConcurrency,proto3" json:"ContainerConcurrency,omitempty"`
	ContainerConcurrencyTargetPercentage int32   `protobuf:"varint,7,opt,name=ContainerConcurrencyTargetPercentage,proto3" json:"ContainerConcurrencyTargetPercentage,omitempty"`
	StableWindowWidthSeconds             int32   `protobuf:"varint,8,opt,name=StableWindowWidthSeconds,proto3" json:"StableWindowWidthSeconds,omitempty"`
	PanicWindowWidthSeconds              int32   `protobuf:"varint,9,opt,name=PanicWindowWidthSeconds,proto3" json:"PanicWindowWidthSeconds,omitempty"`
	ScalingPeriodSeconds                 int32   `protobuf:"varint,10,opt,name=ScalingPeriodSeconds,proto3" json:"ScalingPeriodSeconds,omitempty"`
	ScalingMethod                        int32   `protobuf:"varint,11,opt,name=ScalingMethod,proto3" json:"ScalingMethod,omitempty"`
	TargetBurstCapacity                  float32 `protobuf:"fixed32,12,opt,name=TargetBurstCapacity,proto3" json:"TargetBurstCapacity,omitempty"`
	InitialScale                         int32   `protobuf:"varint,13,opt,name=InitialScale,proto3" json:"InitialScale,omitempty"`
	TotalValue                           float32 `protobuf:"fixed32,14,opt,name=TotalValue,proto3" json:"TotalValue,omitempty"`
	ScaleDownDelay                       int32   `protobuf:"varint,15,opt,name=ScaleDownDelay,proto3" json:"ScaleDownDelay,omitempty"`
}

func (x *AutoscalingConfiguration) Reset() {
	*x = AutoscalingConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AutoscalingConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AutoscalingConfiguration) ProtoMessage() {}

func (x *AutoscalingConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AutoscalingConfiguration.ProtoReflect.Descriptor instead.
func (*AutoscalingConfiguration) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{1}
}

func (x *AutoscalingConfiguration) GetScalingUpperBound() int32 {
	if x != nil {
		return x.ScalingUpperBound
	}
	return 0
}

func (x *AutoscalingConfiguration) GetScalingLowerBound() int32 {
	if x != nil {
		return x.ScalingLowerBound
	}
	return 0
}

func (x *AutoscalingConfiguration) GetPanicThresholdPercentage() float32 {
	if x != nil {
		return x.PanicThresholdPercentage
	}
	return 0
}

func (x *AutoscalingConfiguration) GetMaxScaleUpRate() float32 {
	if x != nil {
		return x.MaxScaleUpRate
	}
	return 0
}

func (x *AutoscalingConfiguration) GetMaxScaleDownRate() float32 {
	if x != nil {
		return x.MaxScaleDownRate
	}
	return 0
}

func (x *AutoscalingConfiguration) GetContainerConcurrency() int32 {
	if x != nil {
		return x.ContainerConcurrency
	}
	return 0
}

func (x *AutoscalingConfiguration) GetContainerConcurrencyTargetPercentage() int32 {
	if x != nil {
		return x.ContainerConcurrencyTargetPercentage
	}
	return 0
}

func (x *AutoscalingConfiguration) GetStableWindowWidthSeconds() int32 {
	if x != nil {
		return x.StableWindowWidthSeconds
	}
	return 0
}

func (x *AutoscalingConfiguration) GetPanicWindowWidthSeconds() int32 {
	if x != nil {
		return x.PanicWindowWidthSeconds
	}
	return 0
}

func (x *AutoscalingConfiguration) GetScalingPeriodSeconds() int32 {
	if x != nil {
		return x.ScalingPeriodSeconds
	}
	return 0
}

func (x *AutoscalingConfiguration) GetScalingMethod() int32 {
	if x != nil {
		return x.ScalingMethod
	}
	return 0
}

func (x *AutoscalingConfiguration) GetTargetBurstCapacity() float32 {
	if x != nil {
		return x.TargetBurstCapacity
	}
	return 0
}

func (x *AutoscalingConfiguration) GetInitialScale() int32 {
	if x != nil {
		return x.InitialScale
	}
	return 0
}

func (x *AutoscalingConfiguration) GetTotalValue() float32 {
	if x != nil {
		return x.TotalValue
	}
	return 0
}

func (x *AutoscalingConfiguration) GetScaleDownDelay() int32 {
	if x != nil {
		return x.ScaleDownDelay
	}
	return 0
}

type SandboxConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	IterationMultiplier int32 `protobuf:"varint,1,opt,name=IterationMultiplier,proto3" json:"IterationMultiplier,omitempty"`
	ColdStartBusyLoopMs int32 `protobuf:"varint,2,opt,name=ColdStartBusyLoopMs,proto3" json:"ColdStartBusyLoopMs,omitempty"`
}

func (x *SandboxConfiguration) Reset() {
	*x = SandboxConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SandboxConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SandboxConfiguration) ProtoMessage() {}

func (x *SandboxConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SandboxConfiguration.ProtoReflect.Descriptor instead.
func (*SandboxConfiguration) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{2}
}

func (x *SandboxConfiguration) GetIterationMultiplier() int32 {
	if x != nil {
		return x.IterationMultiplier
	}
	return 0
}

func (x *SandboxConfiguration) GetColdStartBusyLoopMs() int32 {
	if x != nil {
		return x.ColdStartBusyLoopMs
	}
	return 0
}

type ServiceInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                 string                    `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	Image                string                    `protobuf:"bytes,2,opt,name=Image,proto3" json:"Image,omitempty"`
	RequestedCpu         uint64                    `protobuf:"varint,3,opt,name=RequestedCpu,proto3" json:"RequestedCpu,omitempty"`
	RequestedMemory      uint64                    `protobuf:"varint,4,opt,name=RequestedMemory,proto3" json:"RequestedMemory,omitempty"`
	PortForwarding       *PortMapping              `protobuf:"bytes,5,opt,name=PortForwarding,proto3" json:"PortForwarding,omitempty"`
	AutoscalingConfig    *AutoscalingConfiguration `protobuf:"bytes,6,opt,name=AutoscalingConfig,proto3" json:"AutoscalingConfig,omitempty"`
	SandboxConfiguration *SandboxConfiguration     `protobuf:"bytes,7,opt,name=SandboxConfiguration,proto3" json:"SandboxConfiguration,omitempty"`
	NumArgs              uint32                    `protobuf:"varint,8,opt,name=NumArgs,proto3" json:"NumArgs,omitempty"`
	NumRets              uint32                    `protobuf:"varint,9,opt,name=NumRets,proto3" json:"NumRets,omitempty"`
	EnvironmentVariables []string                  `protobuf:"bytes,10,rep,name=EnvironmentVariables,proto3" json:"EnvironmentVariables,omitempty"`
	ProgramArguments     []string                  `protobuf:"bytes,11,rep,name=ProgramArguments,proto3" json:"ProgramArguments,omitempty"`
	PrepullConfig        PrepullMode               `protobuf:"varint,12,opt,name=PrepullConfig,proto3,enum=data_plane.PrepullMode" json:"PrepullConfig,omitempty"`
}

func (x *ServiceInfo) Reset() {
	*x = ServiceInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceInfo) ProtoMessage() {}

func (x *ServiceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceInfo.ProtoReflect.Descriptor instead.
func (*ServiceInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{3}
}

func (x *ServiceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ServiceInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *ServiceInfo) GetRequestedCpu() uint64 {
	if x != nil {
		return x.RequestedCpu
	}
	return 0
}

func (x *ServiceInfo) GetRequestedMemory() uint64 {
	if x != nil {
		return x.RequestedMemory
	}
	return 0
}

func (x *ServiceInfo) GetPortForwarding() *PortMapping {
	if x != nil {
		return x.PortForwarding
	}
	return nil
}

func (x *ServiceInfo) GetAutoscalingConfig() *AutoscalingConfiguration {
	if x != nil {
		return x.AutoscalingConfig
	}
	return nil
}

func (x *ServiceInfo) GetSandboxConfiguration() *SandboxConfiguration {
	if x != nil {
		return x.SandboxConfiguration
	}
	return nil
}

func (x *ServiceInfo) GetNumArgs() uint32 {
	if x != nil {
		return x.NumArgs
	}
	return 0
}

func (x *ServiceInfo) GetNumRets() uint32 {
	if x != nil {
		return x.NumRets
	}
	return 0
}

func (x *ServiceInfo) GetEnvironmentVariables() []string {
	if x != nil {
		return x.EnvironmentVariables
	}
	return nil
}

func (x *ServiceInfo) GetProgramArguments() []string {
	if x != nil {
		return x.ProgramArguments
	}
	return nil
}

func (x *ServiceInfo) GetPrepullConfig() PrepullMode {
	if x != nil {
		return x.PrepullConfig
	}
	return PrepullMode_NONE
}

type ServiceList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Service []string `protobuf:"bytes,1,rep,name=Service,proto3" json:"Service,omitempty"`
}

func (x *ServiceList) Reset() {
	*x = ServiceList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ServiceList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ServiceList) ProtoMessage() {}

func (x *ServiceList) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ServiceList.ProtoReflect.Descriptor instead.
func (*ServiceList) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{4}
}

func (x *ServiceList) GetService() []string {
	if x != nil {
		return x.Service
	}
	return nil
}

type WorkflowObjectIdentifier struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name string `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
}

func (x *WorkflowObjectIdentifier) Reset() {
	*x = WorkflowObjectIdentifier{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowObjectIdentifier) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowObjectIdentifier) ProtoMessage() {}

func (x *WorkflowObjectIdentifier) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowObjectIdentifier.ProtoReflect.Descriptor instead.
func (*WorkflowObjectIdentifier) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{5}
}

func (x *WorkflowObjectIdentifier) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type WorkflowTaskInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name               string   `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	NumIn              uint32   `protobuf:"varint,2,opt,name=NumIn,proto3" json:"NumIn,omitempty"`
	NumOut             uint32   `protobuf:"varint,3,opt,name=NumOut,proto3" json:"NumOut,omitempty"`
	InputSharding      []uint32 `protobuf:"varint,4,rep,packed,name=InputSharding,proto3" json:"InputSharding,omitempty"`
	Functions          []string `protobuf:"bytes,5,rep,name=Functions,proto3" json:"Functions,omitempty"`
	FunctionInNum      []int32  `protobuf:"varint,6,rep,packed,name=FunctionInNum,proto3" json:"FunctionInNum,omitempty"`
	FunctionOutNum     []int32  `protobuf:"varint,7,rep,packed,name=FunctionOutNum,proto3" json:"FunctionOutNum,omitempty"`
	FunctionDataFlow   []int32  `protobuf:"varint,8,rep,packed,name=FunctionDataFlow,proto3" json:"FunctionDataFlow,omitempty"`
	FunctionInSharding []uint32 `protobuf:"varint,9,rep,packed,name=FunctionInSharding,proto3" json:"FunctionInSharding,omitempty"`
	ConsumerTasks      []string `protobuf:"bytes,10,rep,name=ConsumerTasks,proto3" json:"ConsumerTasks,omitempty"`
	ConsumerDataSrcIdx []int32  `protobuf:"varint,11,rep,packed,name=ConsumerDataSrcIdx,proto3" json:"ConsumerDataSrcIdx,omitempty"`
	ConsumerDataDstIdx []int32  `protobuf:"varint,12,rep,packed,name=ConsumerDataDstIdx,proto3" json:"ConsumerDataDstIdx,omitempty"`
}

func (x *WorkflowTaskInfo) Reset() {
	*x = WorkflowTaskInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowTaskInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowTaskInfo) ProtoMessage() {}

func (x *WorkflowTaskInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowTaskInfo.ProtoReflect.Descriptor instead.
func (*WorkflowTaskInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{6}
}

func (x *WorkflowTaskInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkflowTaskInfo) GetNumIn() uint32 {
	if x != nil {
		return x.NumIn
	}
	return 0
}

func (x *WorkflowTaskInfo) GetNumOut() uint32 {
	if x != nil {
		return x.NumOut
	}
	return 0
}

func (x *WorkflowTaskInfo) GetInputSharding() []uint32 {
	if x != nil {
		return x.InputSharding
	}
	return nil
}

func (x *WorkflowTaskInfo) GetFunctions() []string {
	if x != nil {
		return x.Functions
	}
	return nil
}

func (x *WorkflowTaskInfo) GetFunctionInNum() []int32 {
	if x != nil {
		return x.FunctionInNum
	}
	return nil
}

func (x *WorkflowTaskInfo) GetFunctionOutNum() []int32 {
	if x != nil {
		return x.FunctionOutNum
	}
	return nil
}

func (x *WorkflowTaskInfo) GetFunctionDataFlow() []int32 {
	if x != nil {
		return x.FunctionDataFlow
	}
	return nil
}

func (x *WorkflowTaskInfo) GetFunctionInSharding() []uint32 {
	if x != nil {
		return x.FunctionInSharding
	}
	return nil
}

func (x *WorkflowTaskInfo) GetConsumerTasks() []string {
	if x != nil {
		return x.ConsumerTasks
	}
	return nil
}

func (x *WorkflowTaskInfo) GetConsumerDataSrcIdx() []int32 {
	if x != nil {
		return x.ConsumerDataSrcIdx
	}
	return nil
}

func (x *WorkflowTaskInfo) GetConsumerDataDstIdx() []int32 {
	if x != nil {
		return x.ConsumerDataDstIdx
	}
	return nil
}

type WorkflowInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name              string              `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`
	NumIn             uint32              `protobuf:"varint,2,opt,name=NumIn,proto3" json:"NumIn,omitempty"`
	NumOut            uint32              `protobuf:"varint,3,opt,name=NumOut,proto3" json:"NumOut,omitempty"`
	InitialTasks      []string            `protobuf:"bytes,4,rep,name=InitialTasks,proto3" json:"InitialTasks,omitempty"`
	InitialDataSrcIdx []int32             `protobuf:"varint,5,rep,packed,name=InitialDataSrcIdx,proto3" json:"InitialDataSrcIdx,omitempty"`
	InitialDataDstIdx []int32             `protobuf:"varint,6,rep,packed,name=InitialDataDstIdx,proto3" json:"InitialDataDstIdx,omitempty"`
	OutTasks          []string            `protobuf:"bytes,7,rep,name=OutTasks,proto3" json:"OutTasks,omitempty"`
	OutDataSrcIdx     []int32             `protobuf:"varint,8,rep,packed,name=OutDataSrcIdx,proto3" json:"OutDataSrcIdx,omitempty"`
	Tasks             []*WorkflowTaskInfo `protobuf:"bytes,9,rep,name=Tasks,proto3" json:"Tasks,omitempty"`
}

func (x *WorkflowInfo) Reset() {
	*x = WorkflowInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WorkflowInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WorkflowInfo) ProtoMessage() {}

func (x *WorkflowInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WorkflowInfo.ProtoReflect.Descriptor instead.
func (*WorkflowInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{7}
}

func (x *WorkflowInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *WorkflowInfo) GetNumIn() uint32 {
	if x != nil {
		return x.NumIn
	}
	return 0
}

func (x *WorkflowInfo) GetNumOut() uint32 {
	if x != nil {
		return x.NumOut
	}
	return 0
}

func (x *WorkflowInfo) GetInitialTasks() []string {
	if x != nil {
		return x.InitialTasks
	}
	return nil
}

func (x *WorkflowInfo) GetInitialDataSrcIdx() []int32 {
	if x != nil {
		return x.InitialDataSrcIdx
	}
	return nil
}

func (x *WorkflowInfo) GetInitialDataDstIdx() []int32 {
	if x != nil {
		return x.InitialDataDstIdx
	}
	return nil
}

func (x *WorkflowInfo) GetOutTasks() []string {
	if x != nil {
		return x.OutTasks
	}
	return nil
}

func (x *WorkflowInfo) GetOutDataSrcIdx() []int32 {
	if x != nil {
		return x.OutDataSrcIdx
	}
	return nil
}

func (x *WorkflowInfo) GetTasks() []*WorkflowTaskInfo {
	if x != nil {
		return x.Tasks
	}
	return nil
}

type ActionStatus struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Success bool   `protobuf:"varint,1,opt,name=Success,proto3" json:"Success,omitempty"`
	Message string `protobuf:"bytes,2,opt,name=Message,proto3" json:"Message,omitempty"`
}

func (x *ActionStatus) Reset() {
	*x = ActionStatus{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActionStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActionStatus) ProtoMessage() {}

func (x *ActionStatus) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActionStatus.ProtoReflect.Descriptor instead.
func (*ActionStatus) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{8}
}

func (x *ActionStatus) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ActionStatus) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DataplaneInformation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address   string `protobuf:"bytes,1,opt,name=Address,proto3" json:"Address,omitempty"`
	ApiPort   string `protobuf:"bytes,2,opt,name=ApiPort,proto3" json:"ApiPort,omitempty"`
	ProxyPort string `protobuf:"bytes,3,opt,name=ProxyPort,proto3" json:"ProxyPort,omitempty"`
}

func (x *DataplaneInformation) Reset() {
	*x = DataplaneInformation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DataplaneInformation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DataplaneInformation) ProtoMessage() {}

func (x *DataplaneInformation) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DataplaneInformation.ProtoReflect.Descriptor instead.
func (*DataplaneInformation) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{9}
}

func (x *DataplaneInformation) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *DataplaneInformation) GetApiPort() string {
	if x != nil {
		return x.ApiPort
	}
	return ""
}

func (x *DataplaneInformation) GetProxyPort() string {
	if x != nil {
		return x.ProxyPort
	}
	return ""
}

type Endpoint struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SandboxID   string `protobuf:"bytes,1,opt,name=SandboxID,proto3" json:"SandboxID,omitempty"`
	URL         string `protobuf:"bytes,2,opt,name=URL,proto3" json:"URL,omitempty"`
	NodeName    string `protobuf:"bytes,3,opt,name=NodeName,proto3" json:"NodeName,omitempty"`
	ServiceName string `protobuf:"bytes,4,opt,name=ServiceName,proto3" json:"ServiceName,omitempty"`
}

func (x *Endpoint) Reset() {
	*x = Endpoint{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Endpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Endpoint) ProtoMessage() {}

func (x *Endpoint) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Endpoint.ProtoReflect.Descriptor instead.
func (*Endpoint) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{10}
}

func (x *Endpoint) GetSandboxID() string {
	if x != nil {
		return x.SandboxID
	}
	return ""
}

func (x *Endpoint) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *Endpoint) GetNodeName() string {
	if x != nil {
		return x.NodeName
	}
	return ""
}

func (x *Endpoint) GetServiceName() string {
	if x != nil {
		return x.ServiceName
	}
	return ""
}

type ImageInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	URL  string `protobuf:"bytes,1,opt,name=URL,proto3" json:"URL,omitempty"`
	Size uint64 `protobuf:"varint,2,opt,name=Size,proto3" json:"Size,omitempty"`
}

func (x *ImageInfo) Reset() {
	*x = ImageInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageInfo) ProtoMessage() {}

func (x *ImageInfo) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageInfo.ProtoReflect.Descriptor instead.
func (*ImageInfo) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{11}
}

func (x *ImageInfo) GetURL() string {
	if x != nil {
		return x.URL
	}
	return ""
}

func (x *ImageInfo) GetSize() uint64 {
	if x != nil {
		return x.Size
	}
	return 0
}

type Route struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CIDR    string `protobuf:"bytes,1,opt,name=CIDR,proto3" json:"CIDR,omitempty"`
	Gateway string `protobuf:"bytes,2,opt,name=Gateway,proto3" json:"Gateway,omitempty"`
}

func (x *Route) Reset() {
	*x = Route{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Route) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Route) ProtoMessage() {}

func (x *Route) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Route.ProtoReflect.Descriptor instead.
func (*Route) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{12}
}

func (x *Route) GetCIDR() string {
	if x != nil {
		return x.CIDR
	}
	return ""
}

func (x *Route) GetGateway() string {
	if x != nil {
		return x.Gateway
	}
	return ""
}

type RouteUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Action RouteUpdateAction `protobuf:"varint,1,opt,name=Action,proto3,enum=data_plane.RouteUpdateAction" json:"Action,omitempty"`
	Routes []*Route          `protobuf:"bytes,2,rep,name=Routes,proto3" json:"Routes,omitempty"`
}

func (x *RouteUpdate) Reset() {
	*x = RouteUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_common_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RouteUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouteUpdate) ProtoMessage() {}

func (x *RouteUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_common_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouteUpdate.ProtoReflect.Descriptor instead.
func (*RouteUpdate) Descriptor() ([]byte, []int) {
	return file_common_proto_rawDescGZIP(), []int{13}
}

func (x *RouteUpdate) GetAction() RouteUpdateAction {
	if x != nil {
		return x.Action
	}
	return RouteUpdateAction_ROUTE_INSTALL
}

func (x *RouteUpdate) GetRoutes() []*Route {
	if x != nil {
		return x.Routes
	}
	return nil
}

var File_common_proto protoreflect.FileDescriptor

var file_common_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0a,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x22, 0x7b, 0x0a, 0x0b, 0x50, 0x6f,
	0x72, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x1a, 0x0a, 0x08, 0x48, 0x6f, 0x73,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x48, 0x6f, 0x73,
	0x74, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x47, 0x75, 0x65, 0x73, 0x74, 0x50, 0x6f,
	0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x47, 0x75, 0x65, 0x73, 0x74, 0x50,
	0x6f, 0x72, 0x74, 0x12, 0x32, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x16, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6c, 0x61,
	0x6e, 0x65, 0x2e, 0x4c, 0x34, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x52, 0x08, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x22, 0xfc, 0x05, 0x0a, 0x18, 0x41, 0x75, 0x74, 0x6f,
	0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x55,
	0x70, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x11, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x55, 0x70, 0x70, 0x65, 0x72, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x77,
	0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x53,
	0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4c, 0x6f, 0x77, 0x65, 0x72, 0x42, 0x6f, 0x75, 0x6e, 0x64,
	0x12, 0x3a, 0x0a, 0x18, 0x50, 0x61, 0x6e, 0x69, 0x63, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x18, 0x50, 0x61, 0x6e, 0x69, 0x63, 0x54, 0x68, 0x72, 0x65, 0x73, 0x68, 0x6f,
	0x6c, 0x64, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e,
	0x4d, 0x61, 0x78, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x55, 0x70, 0x52, 0x61, 0x74, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x02, 0x52, 0x0e, 0x4d, 0x61, 0x78, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x55, 0x70,
	0x52, 0x61, 0x74, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x4d, 0x61, 0x78, 0x53, 0x63, 0x61, 0x6c, 0x65,
	0x44, 0x6f, 0x77, 0x6e, 0x52, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x02, 0x52, 0x10,
	0x4d, 0x61, 0x78, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x52, 0x61, 0x74, 0x65,
	0x12, 0x32, 0x0a, 0x14, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14,
	0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x52, 0x0a, 0x24, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x50, 0x65, 0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x24, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x43, 0x6f, 0x6e,
	0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x50, 0x65,
	0x72, 0x63, 0x65, 0x6e, 0x74, 0x61, 0x67, 0x65, 0x12, 0x3a, 0x0a, 0x18, 0x53, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x57, 0x69, 0x64, 0x74, 0x68, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x18, 0x53, 0x74, 0x61, 0x62,
	0x6c, 0x65, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x57, 0x69, 0x64, 0x74, 0x68, 0x53, 0x65, 0x63,
	0x6f, 0x6e, 0x64, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x50, 0x61, 0x6e, 0x69, 0x63, 0x57, 0x69, 0x6e,
	0x64, 0x6f, 0x77, 0x57, 0x69, 0x64, 0x74, 0x68, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x17, 0x50, 0x61, 0x6e, 0x69, 0x63, 0x57, 0x69, 0x6e, 0x64,
	0x6f, 0x77, 0x57, 0x69, 0x64, 0x74, 0x68, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x32,
	0x0a, 0x14, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53,
	0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x14, 0x53, 0x63,
	0x61, 0x6c, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x53, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x53, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x4d, 0x65, 0x74,
	0x68, 0x6f, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x53, 0x63, 0x61, 0x6c, 0x69,
	0x6e, 0x67, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x54, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x42, 0x75, 0x72, 0x73, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x02, 0x52, 0x13, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x42, 0x75, 0x72,
	0x73, 0x74, 0x43, 0x61, 0x70, 0x61, 0x63, 0x69, 0x74, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0c, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x02, 0x52, 0x0a, 0x54, 0x6f, 0x74, 0x61, 0x6c, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x26,
	0x0a, 0x0e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x44, 0x6f, 0x77, 0x6e, 0x44, 0x65, 0x6c, 0x61, 0x79,
	0x18, 0x0f, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x44, 0x6f, 0x77,
	0x6e, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x22, 0x7a, 0x0a, 0x14, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f,
	0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x30,
	0x0a, 0x13, 0x49, 0x74, 0x65, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69,
	0x70, 0x6c, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x49, 0x74, 0x65,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x69, 0x65, 0x72,
	0x12, 0x30, 0x0a, 0x13, 0x43, 0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x75, 0x73,
	0x79, 0x4c, 0x6f, 0x6f, 0x70, 0x4d, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x13, 0x43,
	0x6f, 0x6c, 0x64, 0x53, 0x74, 0x61, 0x72, 0x74, 0x42, 0x75, 0x73, 0x79, 0x4c, 0x6f, 0x6f, 0x70,
	0x4d, 0x73, 0x22, 0xc3, 0x04, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x43, 0x70, 0x75, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x0c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x43, 0x70, 0x75,
	0x12, 0x28, 0x0a, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d,
	0x6f, 0x72, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0f, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x65, 0x64, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x12, 0x3f, 0x0a, 0x0e, 0x50, 0x6f,
	0x72, 0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e,
	0x50, 0x6f, 0x72, 0x74, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x52, 0x0e, 0x50, 0x6f, 0x72,
	0x74, 0x46, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x52, 0x0a, 0x11, 0x41,
	0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x41, 0x75, 0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x11, 0x41, 0x75,
	0x74, 0x6f, 0x73, 0x63, 0x61, 0x6c, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x12,
	0x54, 0x0a, 0x14, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x20, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x53, 0x61, 0x6e, 0x64, 0x62,
	0x6f, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x14, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x4e, 0x75, 0x6d, 0x41, 0x72, 0x67, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x4e, 0x75, 0x6d, 0x41, 0x72, 0x67, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x74, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x4e, 0x75, 0x6d, 0x52, 0x65, 0x74, 0x73, 0x12, 0x32, 0x0a, 0x14, 0x45, 0x6e, 0x76,
	0x69, 0x72, 0x6f, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65,
	0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x14, 0x45, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e,
	0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x62, 0x6c, 0x65, 0x73, 0x12, 0x2a, 0x0a,
	0x10, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x10, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x41, 0x72, 0x67, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x3d, 0x0a, 0x0d, 0x50, 0x72, 0x65,
	0x70, 0x75, 0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x17, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x50, 0x72,
	0x65, 0x70, 0x75, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x0d, 0x50, 0x72, 0x65, 0x70, 0x75,
	0x6c, 0x6c, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x22, 0x27, 0x0a, 0x0b, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x22, 0x2e, 0x0a, 0x18, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x22, 0xc8, 0x03, 0x0a, 0x10, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61,
	0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x75,
	0x6d, 0x49, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x4e, 0x75, 0x6d, 0x49, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x4f, 0x75, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x06, 0x4e, 0x75, 0x6d, 0x4f, 0x75, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x49, 0x6e, 0x70, 0x75,
	0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x0d, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x1c,
	0x0a, 0x09, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x09, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x24, 0x0a, 0x0d,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x4e, 0x75, 0x6d, 0x18, 0x06, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x0d, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x4e,
	0x75, 0x6d, 0x12, 0x26, 0x0a, 0x0e, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75,
	0x74, 0x4e, 0x75, 0x6d, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0e, 0x46, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x4f, 0x75, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x2a, 0x0a, 0x10, 0x46, 0x75,
	0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61, 0x74, 0x61, 0x46, 0x6c, 0x6f, 0x77, 0x18, 0x08,
	0x20, 0x03, 0x28, 0x05, 0x52, 0x10, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x61,
	0x74, 0x61, 0x46, 0x6c, 0x6f, 0x77, 0x12, 0x2e, 0x0a, 0x12, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x53, 0x68, 0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x12, 0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x53, 0x68,
	0x61, 0x72, 0x64, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x2e, 0x0a, 0x12,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x53, 0x72, 0x63, 0x49,
	0x64, 0x78, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x05, 0x52, 0x12, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x53, 0x72, 0x63, 0x49, 0x64, 0x78, 0x12, 0x2e, 0x0a, 0x12,
	0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x44, 0x73, 0x74, 0x49,
	0x64, 0x78, 0x18, 0x0c, 0x20, 0x03, 0x28, 0x05, 0x52, 0x12, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d,
	0x65, 0x72, 0x44, 0x61, 0x74, 0x61, 0x44, 0x73, 0x74, 0x49, 0x64, 0x78, 0x22, 0xc6, 0x02, 0x0a,
	0x0c, 0x57, 0x6f, 0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a,
	0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x4e, 0x75, 0x6d, 0x49, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x4e, 0x75, 0x6d, 0x4f, 0x75,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x4e, 0x75, 0x6d, 0x4f, 0x75, 0x74, 0x12,
	0x22, 0x0a, 0x0c, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x54, 0x61,
	0x73, 0x6b, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x61,
	0x74, 0x61, 0x53, 0x72, 0x63, 0x49, 0x64, 0x78, 0x18, 0x05, 0x20, 0x03, 0x28, 0x05, 0x52, 0x11,
	0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x53, 0x72, 0x63, 0x49, 0x64,
	0x78, 0x12, 0x2c, 0x0a, 0x11, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61,
	0x44, 0x73, 0x74, 0x49, 0x64, 0x78, 0x18, 0x06, 0x20, 0x03, 0x28, 0x05, 0x52, 0x11, 0x49, 0x6e,
	0x69, 0x74, 0x69, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x44, 0x73, 0x74, 0x49, 0x64, 0x78, 0x12,
	0x1a, 0x0a, 0x08, 0x4f, 0x75, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x08, 0x4f, 0x75, 0x74, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x4f,
	0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x72, 0x63, 0x49, 0x64, 0x78, 0x18, 0x08, 0x20, 0x03,
	0x28, 0x05, 0x52, 0x0d, 0x4f, 0x75, 0x74, 0x44, 0x61, 0x74, 0x61, 0x53, 0x72, 0x63, 0x49, 0x64,
	0x78, 0x12, 0x32, 0x0a, 0x05, 0x54, 0x61, 0x73, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x57, 0x6f,
	0x72, 0x6b, 0x66, 0x6c, 0x6f, 0x77, 0x54, 0x61, 0x73, 0x6b, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05,
	0x54, 0x61, 0x73, 0x6b, 0x73, 0x22, 0x42, 0x0a, 0x0c, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x53,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x53, 0x75, 0x63, 0x63, 0x65, 0x73, 0x73, 0x12,
	0x18, 0x0a, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x68, 0x0a, 0x14, 0x44, 0x61, 0x74,
	0x61, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x18, 0x0a, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x41,
	0x70, 0x69, 0x50, 0x6f, 0x72, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x41, 0x70,
	0x69, 0x50, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x50, 0x6f,
	0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x78, 0x79, 0x50,
	0x6f, 0x72, 0x74, 0x22, 0x78, 0x0a, 0x08, 0x45, 0x6e, 0x64, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x12,
	0x1c, 0x0a, 0x09, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x53, 0x61, 0x6e, 0x64, 0x62, 0x6f, 0x78, 0x49, 0x44, 0x12, 0x10, 0x0a,
	0x03, 0x55, 0x52, 0x4c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12,
	0x1a, 0x0a, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x4e, 0x6f, 0x64, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x22, 0x31, 0x0a,
	0x09, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x55, 0x52,
	0x4c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x55, 0x52, 0x4c, 0x12, 0x12, 0x0a, 0x04,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x04, 0x53, 0x69, 0x7a, 0x65,
	0x22, 0x35, 0x0a, 0x05, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x43, 0x49, 0x44,
	0x52, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x43, 0x49, 0x44, 0x52, 0x12, 0x18, 0x0a,
	0x07, 0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x47, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x22, 0x6f, 0x0a, 0x0b, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x35, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1d, 0x2e, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6c,
	0x61, 0x6e, 0x65, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x29, 0x0a,
	0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e,
	0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x6c, 0x61, 0x6e, 0x65, 0x2e, 0x52, 0x6f, 0x75, 0x74, 0x65,
	0x52, 0x06, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x73, 0x2a, 0x1e, 0x0a, 0x0a, 0x4c, 0x34, 0x50, 0x72,
	0x6f, 0x74, 0x6f, 0x63, 0x6f, 0x6c, 0x12, 0x07, 0x0a, 0x03, 0x54, 0x43, 0x50, 0x10, 0x00, 0x12,
	0x07, 0x0a, 0x03, 0x55, 0x44, 0x50, 0x10, 0x01, 0x2a, 0x51, 0x0a, 0x0b, 0x50, 0x72, 0x65, 0x70,
	0x75, 0x6c, 0x6c, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10,
	0x00, 0x12, 0x0c, 0x0a, 0x08, 0x4f, 0x4e, 0x45, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x01, 0x12,
	0x0d, 0x0a, 0x09, 0x4f, 0x4e, 0x45, 0x5f, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x02, 0x12, 0x0c,
	0x0a, 0x08, 0x41, 0x4c, 0x4c, 0x5f, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x03, 0x12, 0x0d, 0x0a, 0x09,
	0x41, 0x4c, 0x4c, 0x5f, 0x41, 0x53, 0x59, 0x4e, 0x43, 0x10, 0x04, 0x2a, 0x38, 0x0a, 0x11, 0x52,
	0x6f, 0x75, 0x74, 0x65, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x11, 0x0a, 0x0d, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x49, 0x4e, 0x53, 0x54, 0x41, 0x4c,
	0x4c, 0x10, 0x00, 0x12, 0x10, 0x0a, 0x0c, 0x52, 0x4f, 0x55, 0x54, 0x45, 0x5f, 0x44, 0x45, 0x4c,
	0x45, 0x54, 0x45, 0x10, 0x01, 0x42, 0x2f, 0x5a, 0x2d, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e,
	0x63, 0x6f, 0x6d, 0x2f, 0x65, 0x74, 0x68, 0x2d, 0x65, 0x61, 0x73, 0x6c, 0x2f, 0x63, 0x6c, 0x75,
	0x73, 0x74, 0x65, 0x72, 0x5f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x61, 0x70, 0x69,
	0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_common_proto_rawDescOnce sync.Once
	file_common_proto_rawDescData = file_common_proto_rawDesc
)

func file_common_proto_rawDescGZIP() []byte {
	file_common_proto_rawDescOnce.Do(func() {
		file_common_proto_rawDescData = protoimpl.X.CompressGZIP(file_common_proto_rawDescData)
	})
	return file_common_proto_rawDescData
}

var file_common_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_common_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_common_proto_goTypes = []interface{}{
	(L4Protocol)(0),                  // 0: data_plane.L4Protocol
	(PrepullMode)(0),                 // 1: data_plane.PrepullMode
	(RouteUpdateAction)(0),           // 2: data_plane.RouteUpdateAction
	(*PortMapping)(nil),              // 3: data_plane.PortMapping
	(*AutoscalingConfiguration)(nil), // 4: data_plane.AutoscalingConfiguration
	(*SandboxConfiguration)(nil),     // 5: data_plane.SandboxConfiguration
	(*ServiceInfo)(nil),              // 6: data_plane.ServiceInfo
	(*ServiceList)(nil),              // 7: data_plane.ServiceList
	(*WorkflowObjectIdentifier)(nil), // 8: data_plane.WorkflowObjectIdentifier
	(*WorkflowTaskInfo)(nil),         // 9: data_plane.WorkflowTaskInfo
	(*WorkflowInfo)(nil),             // 10: data_plane.WorkflowInfo
	(*ActionStatus)(nil),             // 11: data_plane.ActionStatus
	(*DataplaneInformation)(nil),     // 12: data_plane.DataplaneInformation
	(*Endpoint)(nil),                 // 13: data_plane.Endpoint
	(*ImageInfo)(nil),                // 14: data_plane.ImageInfo
	(*Route)(nil),                    // 15: data_plane.Route
	(*RouteUpdate)(nil),              // 16: data_plane.RouteUpdate
}
var file_common_proto_depIdxs = []int32{
	0,  // 0: data_plane.PortMapping.Protocol:type_name -> data_plane.L4Protocol
	3,  // 1: data_plane.ServiceInfo.PortForwarding:type_name -> data_plane.PortMapping
	4,  // 2: data_plane.ServiceInfo.AutoscalingConfig:type_name -> data_plane.AutoscalingConfiguration
	5,  // 3: data_plane.ServiceInfo.SandboxConfiguration:type_name -> data_plane.SandboxConfiguration
	1,  // 4: data_plane.ServiceInfo.PrepullConfig:type_name -> data_plane.PrepullMode
	9,  // 5: data_plane.WorkflowInfo.Tasks:type_name -> data_plane.WorkflowTaskInfo
	2,  // 6: data_plane.RouteUpdate.Action:type_name -> data_plane.RouteUpdateAction
	15, // 7: data_plane.RouteUpdate.Routes:type_name -> data_plane.Route
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_common_proto_init() }
func file_common_proto_init() {
	if File_common_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_common_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PortMapping); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AutoscalingConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SandboxConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ServiceList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowObjectIdentifier); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowTaskInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WorkflowInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActionStatus); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DataplaneInformation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Endpoint); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Route); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_common_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RouteUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_common_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_common_proto_goTypes,
		DependencyIndexes: file_common_proto_depIdxs,
		EnumInfos:         file_common_proto_enumTypes,
		MessageInfos:      file_common_proto_msgTypes,
	}.Build()
	File_common_proto = out.File
	file_common_proto_rawDesc = nil
	file_common_proto_goTypes = nil
	file_common_proto_depIdxs = nil
}
